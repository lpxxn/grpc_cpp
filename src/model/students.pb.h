// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model/students.proto

#ifndef PROTOBUF_model_2fstudents_2eproto__INCLUDED
#define PROTOBUF_model_2fstudents_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace model {
class Student;
class StudentDefaultTypeInternal;
extern StudentDefaultTypeInternal _Student_default_instance_;
class StudentList;
class StudentListDefaultTypeInternal;
extern StudentListDefaultTypeInternal _StudentList_default_instance_;
}  // namespace model

namespace model {

namespace protobuf_model_2fstudents_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_model_2fstudents_2eproto

// ===================================================================

class Student : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:model.Student) */ {
 public:
  Student();
  virtual ~Student();

  Student(const Student& from);

  inline Student& operator=(const Student& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Student(Student&& from) noexcept
    : Student() {
    *this = ::std::move(from);
  }

  inline Student& operator=(Student&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Student& default_instance();

  static inline const Student* internal_default_instance() {
    return reinterpret_cast<const Student*>(
               &_Student_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Student* other);
  friend void swap(Student& a, Student& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Student* New() const PROTOBUF_FINAL { return New(NULL); }

  Student* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Student& from);
  void MergeFrom(const Student& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Student* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int32 age = 3;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:model.Student)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 age_;
  mutable int _cached_size_;
  friend struct protobuf_model_2fstudents_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StudentList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:model.StudentList) */ {
 public:
  StudentList();
  virtual ~StudentList();

  StudentList(const StudentList& from);

  inline StudentList& operator=(const StudentList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StudentList(StudentList&& from) noexcept
    : StudentList() {
    *this = ::std::move(from);
  }

  inline StudentList& operator=(StudentList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StudentList& default_instance();

  static inline const StudentList* internal_default_instance() {
    return reinterpret_cast<const StudentList*>(
               &_StudentList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(StudentList* other);
  friend void swap(StudentList& a, StudentList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StudentList* New() const PROTOBUF_FINAL { return New(NULL); }

  StudentList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StudentList& from);
  void MergeFrom(const StudentList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StudentList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .model.Student students = 2;
  int students_size() const;
  void clear_students();
  static const int kStudentsFieldNumber = 2;
  const ::model::Student& students(int index) const;
  ::model::Student* mutable_students(int index);
  ::model::Student* add_students();
  ::google::protobuf::RepeatedPtrField< ::model::Student >*
      mutable_students();
  const ::google::protobuf::RepeatedPtrField< ::model::Student >&
      students() const;

  // repeated int64 score = 4;
  int score_size() const;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  ::google::protobuf::int64 score(int index) const;
  void set_score(int index, ::google::protobuf::int64 value);
  void add_score(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      score() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_score();

  // string class = 1;
  void clear_class_();
  static const int kClassFieldNumber = 1;
  const ::std::string& class_() const;
  void set_class_(const ::std::string& value);
  #if LANG_CXX11
  void set_class_(::std::string&& value);
  #endif
  void set_class_(const char* value);
  void set_class_(const char* value, size_t size);
  ::std::string* mutable_class_();
  ::std::string* release_class_();
  void set_allocated_class_(::std::string* class_);

  // string teacher = 3;
  void clear_teacher();
  static const int kTeacherFieldNumber = 3;
  const ::std::string& teacher() const;
  void set_teacher(const ::std::string& value);
  #if LANG_CXX11
  void set_teacher(::std::string&& value);
  #endif
  void set_teacher(const char* value);
  void set_teacher(const char* value, size_t size);
  ::std::string* mutable_teacher();
  ::std::string* release_teacher();
  void set_allocated_teacher(::std::string* teacher);

  // @@protoc_insertion_point(class_scope:model.StudentList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::model::Student > students_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > score_;
  mutable int _score_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr class__;
  ::google::protobuf::internal::ArenaStringPtr teacher_;
  mutable int _cached_size_;
  friend struct protobuf_model_2fstudents_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Student

// int64 id = 1;
inline void Student::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Student::id() const {
  // @@protoc_insertion_point(field_get:model.Student.id)
  return id_;
}
inline void Student::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:model.Student.id)
}

// string name = 2;
inline void Student::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Student::name() const {
  // @@protoc_insertion_point(field_get:model.Student.name)
  return name_.GetNoArena();
}
inline void Student::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.Student.name)
}
#if LANG_CXX11
inline void Student::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:model.Student.name)
}
#endif
inline void Student::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.Student.name)
}
inline void Student::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.Student.name)
}
inline ::std::string* Student::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:model.Student.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Student::release_name() {
  // @@protoc_insertion_point(field_release:model.Student.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Student::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:model.Student.name)
}

// int32 age = 3;
inline void Student::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 Student::age() const {
  // @@protoc_insertion_point(field_get:model.Student.age)
  return age_;
}
inline void Student::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:model.Student.age)
}

// -------------------------------------------------------------------

// StudentList

// string class = 1;
inline void StudentList::clear_class_() {
  class__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StudentList::class_() const {
  // @@protoc_insertion_point(field_get:model.StudentList.class)
  return class__.GetNoArena();
}
inline void StudentList::set_class_(const ::std::string& value) {
  
  class__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.StudentList.class)
}
#if LANG_CXX11
inline void StudentList::set_class_(::std::string&& value) {
  
  class__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:model.StudentList.class)
}
#endif
inline void StudentList::set_class_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.StudentList.class)
}
inline void StudentList::set_class_(const char* value, size_t size) {
  
  class__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.StudentList.class)
}
inline ::std::string* StudentList::mutable_class_() {
  
  // @@protoc_insertion_point(field_mutable:model.StudentList.class)
  return class__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StudentList::release_class_() {
  // @@protoc_insertion_point(field_release:model.StudentList.class)
  
  return class__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StudentList::set_allocated_class_(::std::string* class_) {
  if (class_ != NULL) {
    
  } else {
    
  }
  class__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_);
  // @@protoc_insertion_point(field_set_allocated:model.StudentList.class)
}

// repeated .model.Student students = 2;
inline int StudentList::students_size() const {
  return students_.size();
}
inline void StudentList::clear_students() {
  students_.Clear();
}
inline const ::model::Student& StudentList::students(int index) const {
  // @@protoc_insertion_point(field_get:model.StudentList.students)
  return students_.Get(index);
}
inline ::model::Student* StudentList::mutable_students(int index) {
  // @@protoc_insertion_point(field_mutable:model.StudentList.students)
  return students_.Mutable(index);
}
inline ::model::Student* StudentList::add_students() {
  // @@protoc_insertion_point(field_add:model.StudentList.students)
  return students_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::model::Student >*
StudentList::mutable_students() {
  // @@protoc_insertion_point(field_mutable_list:model.StudentList.students)
  return &students_;
}
inline const ::google::protobuf::RepeatedPtrField< ::model::Student >&
StudentList::students() const {
  // @@protoc_insertion_point(field_list:model.StudentList.students)
  return students_;
}

// string teacher = 3;
inline void StudentList::clear_teacher() {
  teacher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StudentList::teacher() const {
  // @@protoc_insertion_point(field_get:model.StudentList.teacher)
  return teacher_.GetNoArena();
}
inline void StudentList::set_teacher(const ::std::string& value) {
  
  teacher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:model.StudentList.teacher)
}
#if LANG_CXX11
inline void StudentList::set_teacher(::std::string&& value) {
  
  teacher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:model.StudentList.teacher)
}
#endif
inline void StudentList::set_teacher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  teacher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:model.StudentList.teacher)
}
inline void StudentList::set_teacher(const char* value, size_t size) {
  
  teacher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:model.StudentList.teacher)
}
inline ::std::string* StudentList::mutable_teacher() {
  
  // @@protoc_insertion_point(field_mutable:model.StudentList.teacher)
  return teacher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StudentList::release_teacher() {
  // @@protoc_insertion_point(field_release:model.StudentList.teacher)
  
  return teacher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StudentList::set_allocated_teacher(::std::string* teacher) {
  if (teacher != NULL) {
    
  } else {
    
  }
  teacher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), teacher);
  // @@protoc_insertion_point(field_set_allocated:model.StudentList.teacher)
}

// repeated int64 score = 4;
inline int StudentList::score_size() const {
  return score_.size();
}
inline void StudentList::clear_score() {
  score_.Clear();
}
inline ::google::protobuf::int64 StudentList::score(int index) const {
  // @@protoc_insertion_point(field_get:model.StudentList.score)
  return score_.Get(index);
}
inline void StudentList::set_score(int index, ::google::protobuf::int64 value) {
  score_.Set(index, value);
  // @@protoc_insertion_point(field_set:model.StudentList.score)
}
inline void StudentList::add_score(::google::protobuf::int64 value) {
  score_.Add(value);
  // @@protoc_insertion_point(field_add:model.StudentList.score)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
StudentList::score() const {
  // @@protoc_insertion_point(field_list:model.StudentList.score)
  return score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
StudentList::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:model.StudentList.score)
  return &score_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace model

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_2fstudents_2eproto__INCLUDED
